@import "airpicker-config";

/* -------------------------------------------------
    airpicker
   ------------------------------------------------- */

.airpickers-container {
  position: absolute;
  left: 0;
  top: 0;

  @media print {
    display: none;
  }
}

.airpicker {
  background: #fff;
  border: 1px solid map_get($airpickerBorderColor, default);
  box-shadow: 0 em(4, 14) em(12, 14) rgba(0, 0, 0, .15);
  border-radius: $airpickerBorderRadius;
  box-sizing: content-box;
  font-family: $airpickerFontFamily, sans-serif;
  font-size: $airpickerFontSize;
  color: map_get($airpickerTextColor, common);
  width: $airpickerWidth;
  position: absolute;
  left: -100000px;
  opacity: 0;
  transition: opacity $airpickerTransitionSpeed $airpickerTransitionEase, transform $airpickerTransitionSpeed $airpickerTransitionEase, left 0s $airpickerTransitionSpeed;
  z-index: $airpickerZIndex;

  &.-from-top- {
    transform: translateY(-$airpickerTransitionOffset);
  }
  &.-from-right- {
    transform: translateX($airpickerTransitionOffset);
  }
  &.-from-bottom- {
    transform: translateY($airpickerTransitionOffset);
  }
  &.-from-left- {
    transform: translateX(-$airpickerTransitionOffset);
  }


  &.active {
    opacity: 1;
    transform: translate(0);
    transition: opacity $airpickerTransitionSpeed $airpickerTransitionEase, transform $airpickerTransitionSpeed $airpickerTransitionEase, left 0s 0s;
  }
}

.airpicker-inline {
  .airpicker {
    border-color: map-get($airpickerBorderColor, inline);
    box-shadow: none;
    position: static;
    left: auto;
    right: auto;
    opacity: 1;
    transform: none;
  }

  .airpicker--pointer {
    display: none;
  }
}

.airpicker--content {
  box-sizing: content-box;
  padding: $airpickerPadding;

  .-only-timepicker- & {
    display: none;
  }
}

//  Pointer
// -------------------------------------------------
$pointerHalfSize: em(4);

.airpicker--pointer {
  position: absolute;
  background: #fff;
  border-top: 1px solid map-get($airpickerBorderColor, default);
  border-right: 1px solid map-get($airpickerBorderColor, default);
  width: $airpickerPointerSize;
  height: $airpickerPointerSize;
  z-index: -1;

  //  Main axis
  // -------------------------

  .-top-left- &, .-top-center- &, .-top-right- & {
    top: calc(100% - #{$pointerHalfSize});
    transform: rotate(135deg);
  }

  .-right-top- &, .-right-center- &, .-right-bottom- & {
    right: calc(100% - #{$pointerHalfSize});
    transform: rotate(225deg);
  }

  .-bottom-left- &, .-bottom-center- &, .-bottom-right- & {
    bottom: calc(100% - #{$pointerHalfSize});
    transform: rotate(315deg);
  }

  .-left-top- &, .-left-center- &, .-left-bottom- & {
    left: calc(100% - #{$pointerHalfSize});
    transform: rotate(45deg);
  }

  //  Secondary axis
  // -------------------------

  .-top-left- &, .-bottom-left- & {
    left: $airpickerPointerOffset;
  }
  .-top-right- &, .-bottom-right- & {
    right: $airpickerPointerOffset;
  }
  .-top-center- &, .-bottom-center- & {
    left: calc(50% - #{$airpickerPointerSize} / 2);
  }

  .-left-top- &, .-right-top- & {
    top: $airpickerPointerOffset;
  }
  .-left-bottom- &, .-right-bottom- & {
    bottom: $airpickerPointerOffset;
  }
  .-left-center- &, .-right-center- & {
    top: calc(50% - #{$airpickerPointerSize} / 2);
  }

}

//  Body
// -------------------------------------------------

.airpicker--body {
  display: none;

  &.active {
    display: block;
  }
}