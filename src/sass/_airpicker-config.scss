@import '_functions.scss';

$airpickerDayCellSize: em(32, 14) !default;
$airpickerWidth: em(250, 14) !default;
$airpickerMinBodyHeight: em(170, 14) !default;
$airpickerBorderRadius: em(4, 14) !default;
$airpickerPadding: em(4, 14) !default;
$airpickerZIndex: 100 !default;

$airpickerFontFamily: Tahoma !default;
$airpickerFontSize: em(14) !default;

$airpickerYearsPerRow: 4 !default;

$airpickerTextColor: (
  button: #5cc4ef,
  otherMonth: #dedede,
  otherMonthInRange: #ccc,
  disabled: #aeaeae,
  currentDate: #4EB5E6,
  common: #4a4a4a,
  dayNames: #FF9A19,
  navArrows: #9c9c9c
) !default;

$airpickerBG: (
  selected: #5cc4ef,
  selectedHover: darken(#5cc4ef, 5),
  inRange: rgba(#5cc4ef, .1),
  hover: #f0f0f0
) !default;

$airpickerBorderColor: (
  nav: #efefef,
  inline: #d7d7d7,
  default: #dbdbdb
) !default;

$airpickerNavigationHeight: em(32, 14) !default;
$airpickerNavigationButtonsOffset: em(2, 14) !default;

$airpickerPointerSize: em(10, 14) !default;
$airpickerPointerOffset: em(10, 14) !default;

// Transitions
$airpickerTransitionSpeed: .3s !default;
$airpickerTransitionEase: ease !default;
$airpickerTransitionOffset: em(8, 14) !default;

// Objects
%otherMonth {
  color: map_get($airpickerTextColor, otherMonth);

  &:hover {
    color: darken(map_get($airpickerTextColor, otherMonth), 10);
  }

  &.-disabled- {
    &.-focus- {
      color: map_get($airpickerTextColor, otherMonth);
    }
  }

  &.-selected- {
    color: #fff;
    background: lighten(map_get($airpickerBG, selected), 15);
    &.-focus- {
      background: lighten(map_get($airpickerBG, selected), 10);
    }
  }
  
  &.-in-range- {
    background-color: map_get($airpickerBG, inRange);
    color: darken(map_get($airpickerTextColor, otherMonth), 7);

    &.-focus- {
      background-color: rgba(map_get($airpickerBG, inRange), .2);
    }
  }


  &:empty {
    background: none;
    border: none;
  }
}
